[{"C:\\Users\\dell\\Documents\\frontpudc\\src\\index.js":"1","C:\\Users\\dell\\Documents\\frontpudc\\src\\app.js":"2","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Footer.js":"3","C:\\Users\\dell\\Documents\\frontpudc\\src\\routing\\AppRouter.js":"4","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Comite\\Comite.js":"5","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Comite\\ComiteList.js":"6","C:\\Users\\dell\\Documents\\frontpudc\\src\\routing\\PrivateRoutes.js":"7","C:\\Users\\dell\\Documents\\frontpudc\\src\\routing\\AuthenticatedRoute.js":"8","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Comite\\ComiteDetails.js":"9","C:\\Users\\dell\\Documents\\frontpudc\\src\\service\\comiteService.js":"10","C:\\Users\\dell\\Documents\\frontpudc\\src\\service\\vehiculeService.js":"11","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\DataTable\\Pagination.js":"12","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Button.js":"13","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Navigation.js":"14","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\FormLogin.js":"15","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\FormContact.js":"16","C:\\Users\\dell\\Documents\\frontpudc\\src\\service\\userService.js":"17","C:\\Users\\dell\\Documents\\frontpudc\\src\\utils\\AuthenticationHelper.js":"18","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\GeneratePdf\\GeneratePdf.js":"19","C:\\Users\\dell\\Documents\\frontpudc\\src\\axios\\axios.js":"20","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Equipement\\Equipements.js":"21","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Equipement\\AddEquipement.js":"22","C:\\Users\\dell\\Documents\\frontpudc\\src\\service\\equipementService.js":"23","C:\\Users\\dell\\Documents\\frontpudc\\src\\service\\panneService.js":"24","C:\\Users\\dell\\Documents\\frontpudc\\src\\service\\reparation.js":"25"},{"size":176,"mtime":1608463192264,"results":"26","hashOfConfig":"27"},{"size":297,"mtime":1611576177560,"results":"28","hashOfConfig":"27"},{"size":292,"mtime":1611577708907,"results":"29","hashOfConfig":"30"},{"size":675,"mtime":1610282919740,"results":"31","hashOfConfig":"27"},{"size":27957,"mtime":1615481684958,"results":"32","hashOfConfig":"27"},{"size":7201,"mtime":1614256323525,"results":"33","hashOfConfig":"27"},{"size":931,"mtime":1614434255938,"results":"34","hashOfConfig":"27"},{"size":422,"mtime":1608660066222,"results":"35","hashOfConfig":"27"},{"size":7135,"mtime":1614434512172,"results":"36","hashOfConfig":"27"},{"size":1546,"mtime":1609966980604,"results":"37","hashOfConfig":"27"},{"size":1367,"mtime":1608827776316,"results":"38","hashOfConfig":"30"},{"size":1022,"mtime":1615477989548,"results":"39","hashOfConfig":"27"},{"size":585,"mtime":1611575913192,"results":"40","hashOfConfig":"27"},{"size":5710,"mtime":1614071436246,"results":"41","hashOfConfig":"27"},{"size":5416,"mtime":1614694729104,"results":"42","hashOfConfig":"27"},{"size":4909,"mtime":1608765926309,"results":"43","hashOfConfig":"30"},{"size":2176,"mtime":1610283710055,"results":"44","hashOfConfig":"27"},{"size":392,"mtime":1608632185452,"results":"45","hashOfConfig":"27"},{"size":3327,"mtime":1614257079454,"results":"46","hashOfConfig":"27"},{"size":156,"mtime":1615478589663,"results":"47","hashOfConfig":"27"},{"size":46337,"mtime":1615478258909,"results":"48","hashOfConfig":"27"},{"size":11867,"mtime":1615481756879,"results":"49","hashOfConfig":"27"},{"size":2543,"mtime":1614518782818,"results":"50","hashOfConfig":"27"},{"size":1723,"mtime":1614515453804,"results":"51","hashOfConfig":"27"},{"size":1843,"mtime":1614525222864,"results":"52","hashOfConfig":"27"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"1nn3eo1",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"7ig0ce",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"55"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"55"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"C:\\Users\\dell\\Documents\\frontpudc\\src\\index.js",[],["110","111"],"C:\\Users\\dell\\Documents\\frontpudc\\src\\app.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Footer.js",[],["112","113"],"C:\\Users\\dell\\Documents\\frontpudc\\src\\routing\\AppRouter.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Comite\\Comite.js",["114","115"],"C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Comite\\ComiteList.js",["116","117","118"],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { comiteService } from \"../../service/comiteService\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Pagination from \"../DataTable/Pagination\";\r\n\r\nfunction ComiteList() {\r\n  const [comite, setComite] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [nombrePerPage, setNombrePerPage] = useState(5);\r\n  const [findKey, setFindKey] = useState(\"\");\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getListComite();\r\n  }, []);\r\n\r\n  const getListComite = () => {\r\n    setLoading(true);\r\n    comiteService.getAllComite().then((res) => {\r\n      setLoading(false);\r\n      setComite(res);\r\n    });\r\n  };\r\n\r\n  const search = (rows) => {\r\n    return rows.filter(\r\n      (row) =>\r\n        row.nomComite.toString().toLowerCase().indexOf(findKey.toLowerCase()) >\r\n        -1\r\n      //   ||\r\n      // row.kilometrage\r\n      //   .toString()\r\n      //   .toLowerCase()\r\n      //   .indexOf(findKey.toLowerCase()) > -1\r\n    );\r\n\r\n    // const columns = rows[0] && Object.keys(rows[0]);\r\n    // console.log(columns);\r\n    // return rows.filter((row) =>\r\n    //   columns.some(\r\n    //     (column) =>\r\n    //       row[column].toString().toLowerCase().indexOf(findKey.toLowerCase()) >\r\n    //       -1\r\n    //   )\r\n    // );\r\n  };\r\n  // get current vehicule\r\n  // const indexOfLastVehicule = currentPage * vehiculePerPage;\r\n  // const indexOfFirstVehicule = indexOfLastVehicule - vehiculePerPage;\r\n  // const currentVehicule = vehicule.slice(\r\n  //   currentPage * vehiculePerPage - vehiculePerPage,\r\n  //   currentPage * vehiculePerPage\r\n  // );\r\n\r\n  //get page form pagination\r\n  const paginate = (pageNumber) => {\r\n    console.log(pageNumber);\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  const imprimer = () => {\r\n    window.print();\r\n  };\r\n  let i = 1;\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-col items-center h-screen font-quicksand text-white bg-gray-800 antialiased  justify-items-center p-5\">\r\n        <div className=\"relative py-3 px-4 rounded-lg sm:w-4/12 shadow bg-white \">\r\n          <svg\r\n            className=\"w-5 h-5 absolute text-gray-500 left-4 top-3\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n            />\r\n          </svg>\r\n          <input\r\n            className=\"pl-6 focus:outline-none w-full bg-transparent text-gray-900\"\r\n            value={findKey}\r\n            placeholder=\"Rechercher ...\"\r\n            onChange={(event) => setFindKey(event.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"w-full  py-4  text-gray-500\">\r\n          <h2 className=\"text-center text-white text-lg\"> Liste des Comités</h2>\r\n          <div className=\"text-white\">\r\n            <button\r\n              className=\"bg-green-600 p-2 rounded-lg mb-2\"\r\n              onClick={() => {\r\n                history.push(\"/comite\");\r\n              }}\r\n            >\r\n              Ajouter Comité\r\n            </button>\r\n          </div>\r\n          <table className=\"table-auto rounded-lg shadow w-full border-collapse\">\r\n            <thead>\r\n              <tr className=\"uppercase bg-gray-300\">\r\n                <th className=\"py-4 px-2 border-r-2 border-grey-800\">N°</th>\r\n                <th className=\"py-4 px-2 border-r-2 border-grey-800\">\r\n                  Dénomination\r\n                </th>\r\n                <th className=\"py-4 px-2 border-r-2 border-grey-800\">\r\n                  Date Création\r\n                </th>\r\n                <th className=\"py-4 px-2 border-r-2 border-grey-light\">\r\n                  Région\r\n                </th>\r\n                <th className=\"py-4 px-2  border-grey-light\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white\">\r\n              {search(comite)\r\n                .slice(\r\n                  currentPage * nombrePerPage - nombrePerPage,\r\n                  currentPage * nombrePerPage\r\n                )\r\n                .map((row) => (\r\n                  <tr className=\"text-center  hover:bg-gray-100 \" key={row.id}>\r\n                    <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                      {i++}\r\n                    </td>\r\n                    <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                      {row.nomComite}\r\n                    </td>\r\n                    <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                      {row.dateCreation}\r\n                    </td>\r\n                    <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                      {\r\n                        row.region\r\n                        // <a\r\n                        //   download={row.name}\r\n                        //   href={`data:application/pdf;base64,${row.photoPresidente}`}\r\n                        // >\r\n                        //   <img\r\n                        //     class=\" object-fill w-20 h-10\"\r\n                        //     src={`data:application/pdf;base64,${row.photoPresidente}`}\r\n                        //     alt=\"doc\"\r\n                        //   />\r\n                        // </a>\r\n                      }\r\n                    </td>\r\n                    <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                      <svg\r\n                        onClick={() => {\r\n                          console.log(row.id);\r\n                          history.push(`/comite-show/${row.id}`);\r\n                        }}\r\n                        className=\"w-5 h-5 cursor-pointer\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                      >\r\n                        <path\r\n                          stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"\r\n                          stroke-width=\"2\"\r\n                          d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                        />\r\n                        <path\r\n                          stroke-linecap=\"round\"\r\n                          stroke-linejoin=\"round\"\r\n                          stroke-width=\"2\"\r\n                          d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n                        />\r\n                      </svg>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <Pagination\r\n          nombreTotal={search(comite).length}\r\n          nombrePerPage={nombrePerPage}\r\n          paginate={paginate}\r\n        />\r\n        <div>\r\n          {/* <button className=\"bg-orange-500\" onClick={() => imprimer()}>\r\n            imprimer\r\n          </button> */}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ComiteList;\r\n","C:\\Users\\dell\\Documents\\frontpudc\\src\\routing\\PrivateRoutes.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\routing\\AuthenticatedRoute.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Comite\\ComiteDetails.js",["119","120","121","122","123"],"import React, { useEffect, useState } from \"react\";\r\nimport { comiteService } from \"../../service/comiteService\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport generatePDF from \"../GeneratePdf/GeneratePdf\";\r\n\r\nfunction ComiteDetails({ match }) {\r\n  const [comite, setcomite] = useState({});\r\n  const [openTab, setOpenTab] = React.useState(1);\r\n  let idComite = match.params.id;\r\n\r\n  useEffect(() => {\r\n    getComiteById(idComite);\r\n  }, []);\r\n\r\n  const getComiteById = (id) => {\r\n    comiteService\r\n      .getComiteById(id)\r\n      .then((res) => {\r\n        console.log(res);\r\n        setcomite(res);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  };\r\n  let history = useHistory();\r\n  let i = 1,\r\n    j = 1;\r\n  let color = \"green\";\r\n  return (\r\n    <>\r\n      <div className=\"bg-gray-800 flex flex-col space-y-14 text-white  font-quicksand w-full\">\r\n        <div className=\" py-7  w-10/12  mx-auto flex justify-between\">\r\n          <ul>\r\n            <li>Nom Comité : {comite.nomComite}</li>\r\n            <li>Date de Création : {comite.dateCreation}</li>\r\n            <li>Numero Récipissé : {comite.numRecepisse}</li>\r\n            <li>Région : {comite.region}</li>\r\n            <li>Département : {comite.departement}</li>\r\n            <li>Commune : {comite.commune}</li>\r\n          </ul>\r\n          <div>\r\n            <img\r\n              class=\" object-fill w-40 h-40\"\r\n              src={`data:**/*;base64,${comite.photoPresidente}`}\r\n              alt=\"presidente\"\r\n            />\r\n            <h2> Présidente</h2>\r\n          </div>\r\n          <ul>\r\n            <li>Village/Quartier : {comite.quartierVillage}</li>\r\n            <li>Nom du Chef de Village: {comite.nomChefVillage}</li>\r\n            <li>Téléphone : {comite.telChefVillage}</li>\r\n\r\n            <li>Date Assemblée D'information : {comite.dateAssembleeInfo}</li>\r\n            <li>\r\n              Date Assemblée Constitutive :{comite.dateAssembleeConstitutive}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n\r\n        <div className=\"mx-auto flex justify-between w-10/12\">\r\n          <button\r\n            className=\" p-2 bg-green-500  rounded-lg focus:outline-none\"\r\n            onClick={() => {\r\n              console.log(comite.nomComite);\r\n              let comiteParam = {\r\n                idComite: idComite,\r\n                nomComite: comite.nomComite,\r\n              };\r\n              history.push(`/equipement/${JSON.stringify(comiteParam)}`);\r\n            }}\r\n          >\r\n            Equipements\r\n          </button>\r\n          <button\r\n            className=\" p-2 bg-green-500  rounded-lg focus:outline-none\"\r\n            onClick={() => generatePDF(comite)}\r\n          >\r\n            Générer PDF\r\n          </button>\r\n        </div>\r\n\r\n        <div>\r\n          <h2 className=\" w-1/4  text-center mx-auto\">\r\n            Liste des Membres du Bureau\r\n          </h2>\r\n\r\n          <table className=\"table-auto  text-black  rounded-lg shadow mx-auto w-10/12 border-collapse\">\r\n            <thead>\r\n              <tr className=\"uppercase bg-gray-300\">\r\n                <th className=\"py-4 px-2 border-r-2 border-grey-800\">N°</th>\r\n                <th className=\"py-4 px-2 border-r-2 border-grey-800\">Prenom</th>\r\n                <th className=\"py-4 px-2 border-r-2 border-grey-800\">Nom</th>\r\n                <th className=\"py-4 px-2  border-grey-light\">Poste</th>\r\n                {/* <th className=\"py-4 px-2  border-grey-light\">Action</th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-gray-100\">\r\n              {comite.membres?.map((row) => (\r\n                <tr className=\"text-center  \" key={row.id}>\r\n                  <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                    {i++}\r\n                  </td>\r\n                  <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                    {row.prenom}\r\n                  </td>\r\n                  <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                    {row.nom}\r\n                  </td>\r\n                  <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                    {\r\n                      row.poste\r\n                      // <a\r\n                      //   download={row.name}\r\n                      //   href={`data:application/pdf;base64,${row.photoPresidente}`}\r\n                      // >\r\n                      //   <img\r\n                      //     class=\" object-fill w-20 h-10\"\r\n                      //     src={`data:application/pdf;base64,${row.photoPresidente}`}\r\n                      //     alt=\"doc\"\r\n                      //   />\r\n                      // </a>\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <div>\r\n          <h2 className=\" w-1/4 text-center   mx-auto\">\r\n            Liste des membres du Comité Directeur\r\n          </h2>\r\n          <table className=\"table-auto  text-black rounded-lg shadow mx-auto w-10/12 border-collapse\">\r\n            <thead>\r\n              <tr className=\"uppercase bg-gray-300\">\r\n                <th className=\"py-4 px-2 border-r-2 border-grey-800\">N°</th>\r\n                <th className=\"py-4 px-2 border-r-2 border-grey-800\">Prenom</th>\r\n                <th className=\"py-4 px-2 border-r-2 border-grey-800\">Nom</th>\r\n                <th className=\"py-4 px-2 border-r-2 border-grey-800\">Tel</th>\r\n                <th className=\"py-4 px-2  border-grey-light\">Profession</th>\r\n                {/* <th className=\"py-4 px-2  border-grey-light\">Action</th> */}\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-gray-100\">\r\n              {comite.listePresence?.map((row) => (\r\n                <tr className=\"text-center   \" key={row.id}>\r\n                  <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                    {j++}\r\n                  </td>\r\n                  <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                    {row.prenom}\r\n                  </td>\r\n                  <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                    {row.nom}\r\n                  </td>\r\n                  <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                    {row?.tel}\r\n                  </td>\r\n                  <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                    {\r\n                      row.profession\r\n                      // <a\r\n                      //   download={row.name}\r\n                      //   href={`data:application/pdf;base64,${row.photoPresidente}`}\r\n                      // >\r\n                      //   <img\r\n                      //     class=\" object-fill w-20 h-10\"\r\n                      //     src={`data:application/pdf;base64,${row.photoPresidente}`}\r\n                      //     alt=\"doc\"\r\n                      //   />\r\n                      // </a>\r\n                    }\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ComiteDetails;\r\n","C:\\Users\\dell\\Documents\\frontpudc\\src\\service\\comiteService.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\service\\vehiculeService.js",["124"],"import axios from \"../axios/axios\";\r\nimport { authenticationHelper } from \"../utils/AuthenticationHelper\";\r\n\r\nexport const vehiculeService = {\r\n  createVehicule,\r\n  getAllVehicule,\r\n};\r\n\r\nfunction createVehicule(data) {\r\n  // const requestOptions = user;\r\n  return axios\r\n    .post(\"/photo/upload\", data)\r\n    .then(handleResponse)\r\n    .then((vehicule) => vehicule);\r\n}\r\nfunction getAllVehicule() {\r\n  return axios\r\n    .get(\"/photo/getAllVehicule\")\r\n    .then(handleResponse)\r\n    .then((vehicule) => vehicule);\r\n}\r\n\r\nfunction logout() {\r\n  authenticationHelper.logout();\r\n  localStorage.removeItem(\"idUser\");\r\n}\r\n\r\nfunction handleResponse(response) {\r\n  const { data } = response;\r\n  if (response.status === 401) {\r\n    if (response.status === 401) {\r\n      // auto logout if 401 response returned from api\r\n      logout();\r\n      // eslint-disable-next-line no-restricted-globals\r\n      location.reload(true);\r\n    }\r\n\r\n    const error = (data && data.message) || response.statusText;\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  return data;\r\n}\r\n\r\nfunction handleRegisterResponse(response) {\r\n  const { data } = response;\r\n  if (response.status === 401) {\r\n    const error = (data && data.message) || response.statusText;\r\n    console.log(\"handleRegisterResponse => error\");\r\n    console.log(error);\r\n    return Promise.reject(error);\r\n  }\r\n\r\n  return data;\r\n}\r\n","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\DataTable\\Pagination.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Button.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Navigation.js",["125","126","127","128"],"import React, { useState, useEffect } from \"react\";\r\nimport { FaBars, FaTimes } from \"react-icons/fa\";\r\n\r\nimport { Link as ScrollLink } from \"react-scroll\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"./Button\";\r\nimport FormLogin from \"./FormLogin\";\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { userService } from \"../service/userService\";\r\n\r\nconst classes = {\r\n  navbar:\r\n    \"flex  relative justify-between items-center text-lg font-quicksand select-none text-grey-900 bg-gray-400 h-20 p-10 sticky top-0 z-20\",\r\n\r\n  menuLarge: \"hidden sm:flex space-x-10 items-center h-10  \",\r\n  logoLink: \"flex space-x-3 items-baseline text-2xl font-bold\",\r\n  menuItem: \"\",\r\n  menuLink: \"text-white cursor-pointer hover:text-blue-200  \",\r\n  menuButton: \"\",\r\n  menuIcon: \"flex cursor-pointer text-2xl text-white sm:hidden \",\r\n  menuMobile: (click) =>\r\n    `${\r\n      click\r\n        ? \"flex flex-col bg-gray-400  space-y-10 py-5 items-center absolute top-20 left-0 h-screen w-full z-10 sm:hidden\"\r\n        : \"hidden\"\r\n    }`,\r\n  modalLoginForm: (openLogin) =>\r\n    `${\r\n      openLogin\r\n        ? \"bg-black bg-opacity-50 absolute inset-0 h-screen w-full z-40 \"\r\n        : \"hidden\"\r\n    }`,\r\n  wrapperForm:\r\n    \"flex h-full bg-gray-800 rounded-lg flex-col justify-center items-center \",\r\n  closeIcon:\r\n    \"bg-gray-500 rounded-full h-8 w-8 text-red-500 hover:text-red-800 cursor-pointer mt-2 \",\r\n  // closeModal: \"flex bg-blue-800 justify-center items-center w-full h-20 -mb-30\",\r\n  formContact: \"\",\r\n};\r\n\r\nfunction Navigation() {\r\n  const [showMenuMobile, setShowMenuMobile] = useState(false);\r\n  const handleClick = () => setShowMenuMobile(!showMenuMobile);\r\n  const closeMobileMenu = () => setShowMenuMobile(false);\r\n  const [openLogin, setOpenLogin] = useState(false);\r\n  const [openLogout, setOpenLogout] = useState(false);\r\n\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    // showLargeMenu();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.navbar}>\r\n        <Link\r\n          to=\"/comiteList\"\r\n          className={classes.logoLink}\r\n          onClick={closeMobileMenu}\r\n        >\r\n          <img className=\"w-30 h-20\" src=\"/images/logo_pudc.jpeg\" alt=\"logo\" />\r\n          <h4 className=\"text-green-700\"> </h4>\r\n        </Link>\r\n        <div className={classes.menuIcon} onClick={handleClick}>\r\n          {showMenuMobile ? <FaTimes /> : <FaBars />}\r\n        </div>\r\n        <ul className={classes.menuMobile(showMenuMobile)}>\r\n          <li className={classes.menuItem} onClick={closeMobileMenu}>\r\n            <Link to=\"/comiteList\" className={classes.menuLink}>\r\n              {\" \"}\r\n              Comite\r\n            </Link>\r\n          </li>\r\n          <li className={classes.menuItem} onClick={closeMobileMenu}>\r\n            <Link to=\"/panne\" className={classes.menuLink}>\r\n              {\" \"}\r\n              Panne\r\n            </Link>\r\n          </li>\r\n          {/* <li className={classes.menuItem} onClick={closeMobileMenu}>\r\n            <Link to=\"/menu\" className={classes.menuLink}>\r\n              {\" \"}\r\n              Menu\r\n            </Link>\r\n          </li>\r\n          <li className={classes.menuItem} onClick={closeMobileMenu}>\r\n            <Link to=\"/commande\" className={classes.menuLink}>\r\n              {\" \"}\r\n              Commande\r\n            </Link>\r\n          </li> */}\r\n          <li className={classes.menuButton} onClick={closeMobileMenu}>\r\n            <Button\r\n              primary={true}\r\n              large={true}\r\n              onClick={() => {\r\n                userService.logout();\r\n                setOpenLogout(false);\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              Déconnexion\r\n            </Button>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className={classes.menuLarge}>\r\n          <li className={classes.menuItem}>\r\n            <Link to=\"/comiteList\" className={classes.menuLink}>\r\n              Comite\r\n            </Link>\r\n          </li>\r\n          <li className={classes.menuItem}>\r\n            <Link to=\"/panne\" className={classes.menuLink}>\r\n              Panne\r\n            </Link>\r\n          </li>\r\n          {/* <li className={classes.menuItem}>\r\n            <Link to=\"/menu\" className={classes.menuLink}>\r\n              Menu\r\n            </Link>\r\n          </li>\r\n          <li className={classes.menuItem}>\r\n            <Link to=\"/commande\" className={classes.menuLink}>\r\n              Commande\r\n            </Link>\r\n          </li> */}\r\n          <span>\r\n            <svg\r\n              onClick={() => {\r\n                setOpenLogout(!openLogout);\r\n              }}\r\n              className=\"h-8 w-8  text-white rounded-full cursor-pointer \"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 20 20\"\r\n              fill=\"currentColor\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </span>\r\n        </ul>\r\n        <ul\r\n          className={`${\r\n            openLogout\r\n              ? \"bg-gray-400 text-gray-700 border-t-4 absolute top-20 right-1 p-2 rounded-b-lg  hidden sm:flex flex-col\"\r\n              : \"hidden\"\r\n          }`}\r\n        >\r\n          <button\r\n            onClick={() => {\r\n              userService.logout();\r\n              setOpenLogout(false);\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            Déconnexion\r\n          </button>\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Navigation;\r\n","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\FormLogin.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\FormContact.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\service\\userService.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\utils\\AuthenticationHelper.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\GeneratePdf\\GeneratePdf.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\axios\\axios.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Equipement\\Equipements.js",["129","130","131","132","133","134","135"],"import React, { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { equipementService } from \"../../service/equipementService\";\r\nimport Pagination from \"../DataTable/Pagination\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { panneService } from \"../../service/panneService\";\r\nimport { reparationService } from \"../../service/reparation\";\r\n\r\nconst schema1 = yup.object().shape({\r\n  dateDeclaration: yup.date().required(),\r\n});\r\nconst schema2 = yup.object().shape({\r\n  dateCloture: yup.date().required(),\r\n});\r\nfunction Equipements({ match }) {\r\n  const [openTab, setOpenTab] = React.useState(1);\r\n  const [showModalDeclarePanne, setShowModalDeclarePanne] = React.useState(\r\n    false\r\n  );\r\n  const [showModalCloturePanne, setShowModalCloturePanne] = React.useState(\r\n    false\r\n  );\r\n\r\n  const [idEquipement, setidEquipement] = useState(\"\");\r\n  const [typeEquipement, setTypeEquipement] = useState(\"\");\r\n  const [equipements, setEquipements] = useState([]);\r\n  const [pannes, setPannes] = useState([]);\r\n  const [reparations, setReparations] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [nombrePerPage, setNombrePerPage] = useState(5);\r\n  const [findKey, setFindKey] = useState(\"\");\r\n  const [logging, setlogging] = useState(false);\r\n  const [messagePanne, setMessagePanne] = useState(\"\");\r\n  const [messageMarche, setMessageMarche] = useState(\"\");\r\n  \r\n  const [statut, setStatut] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getEquipmentByIdComite();\r\n    getPanneByIdComite();\r\n    getReparationByIdComite();\r\n  }, []);\r\n\r\n  const { register, handleSubmit, watch, errors } = useForm({\r\n    resolver: showModalDeclarePanne\r\n      ? yupResolver(schema1)\r\n      : yupResolver(schema2),\r\n  });\r\n  const onSubmit1 = (data,e) => {\r\n    const equipment = {\r\n      dateDeclaration: data.dateDeclaration,\r\n      idEquipement: idEquipement,\r\n      typeEquipement: typeEquipement,\r\n      typePanne: data.typePanne,\r\n      idComite: idComite,\r\n      statutEquipment: \"EN PANNE\",\r\n    };\r\n    equipementService\r\n      .declarePanneEquipment(equipment)\r\n      .then((res) => {\r\n        setlogging(false);\r\n        setMessagePanne(\"Equipement en Panne\");\r\n        getEquipmentByIdComite();\r\n        getPanneByIdComite();\r\n        getReparationByIdComite();\r\n        e.target.reset();\r\n        console.log(res);\r\n      })\r\n      .catch((e) => {\r\n      \r\n        setlogging(false);\r\n        setMessagePanne(\"Echec change Statut ressayez\");\r\n        console.log(e);\r\n      });\r\n    console.log(\"declare panne\");\r\n\r\n    // console.log(equipment);\r\n  };\r\n  const onSubmit2 = (data,e) => {\r\n    const equipment = {\r\n      dateCloture: data.dateCloture,\r\n      idEquipement: idEquipement,\r\n      typeEquipement: typeEquipement,\r\n      typePanne: data.typePanne,\r\n      idComite: idComite,\r\n      statutEquipment: \"EN MARCHE\",\r\n    };\r\n    console.log(\"cloture panne\");\r\n    equipementService\r\n      .cloturerPanneEquipment(equipment)\r\n      .then((res) => {\r\n        setlogging(false);\r\n        setMessageMarche(\"Equipement en Marche\");\r\n        getEquipmentByIdComite();\r\n        getPanneByIdComite();\r\n        getReparationByIdComite();\r\n        e.target.reset();\r\n        console.log(res);\r\n      })\r\n      .catch((e) => {\r\n        setlogging(false);\r\n        setMessageMarche(\"Echec change Statut ressayez\");\r\n        console.log(e);\r\n      });\r\n  };\r\n  const getEquipmentByIdComite = () => {\r\n    setLoading(true);\r\n    equipementService.getEquipmentByIdComite(idComite).then((res) => {\r\n      // setLoading(false);\r\n      console.log(res);\r\n      setEquipements(res);\r\n    });\r\n  };\r\n  const getPanneByIdComite = () => {\r\n    setLoading(true);\r\n    panneService.getPanneByIdComite(idComite).then((res) => {\r\n      // setLoading(false);\r\n      console.log(res);\r\n      setPannes(res);\r\n    });\r\n  };\r\n\r\n  const getReparationByIdComite = () => {\r\n    setLoading(true);\r\n    reparationService.getReparationByIdComite(idComite).then((res) => {\r\n      // setLoading(false);\r\n      console.log(res);\r\n      setReparations(res);\r\n    });\r\n  };\r\n\r\n  const search = (rows) => {\r\n    return rows.filter(\r\n      (row) =>\r\n        row.typeEquipement\r\n          .toString()\r\n          .toLowerCase()\r\n          .indexOf(findKey.toLowerCase()) > -1 ||\r\n        row.statutEquipement\r\n          .toString()\r\n          .toLowerCase()\r\n          .indexOf(findKey.toLowerCase()) > -1\r\n      // row.dateReception\r\n      //   .toString()\r\n      //   .toLowerCase()\r\n      //   .indexOf(findKey.toLowerCase()) > -1 ||\r\n\r\n      // const columns = rows[0] && Object.keys(rows[0]);\r\n      // console.log(columns);\r\n      // return rows.filter((row) =>\r\n      //   columns.some(\r\n      //     (column) =>\r\n      //       row[column].toString().toLowerCase().indexOf(findKey.toLowerCase()) >\r\n      //       -1\r\n      //   )\r\n      // );\r\n    );\r\n  };\r\n  // const searchPanne = (rows) => {\r\n  //   return rows.filter(\r\n  //     (row) =>\r\n  //       row.typeEquipement\r\n  //         .toString()\r\n  //         .toLowerCase()\r\n  //         .indexOf(findKey.toLowerCase()) > -1 ||\r\n  //       row.dateDeclaration\r\n  //         .toString()\r\n  //         .toLowerCase()\r\n  //         .indexOf(findKey.toLowerCase()) > -1 ||\r\n  //       row.statutEquipment\r\n  //         .toString()\r\n  //         .toLowerCase()\r\n  //         .indexOf(findKey.toLowerCase()) > -1\r\n\r\n  //     // const columns = rows[0] && Object.keys(rows[0]);\r\n  //     // console.log(columns);\r\n  //     // return rows.filter((row) =>\r\n  //     //   columns.some(\r\n  //     //     (column) =>\r\n  //     //       row[column].toString().toLowerCase().indexOf(findKey.toLowerCase()) >\r\n  //     //       -1\r\n  //     //   )\r\n  //     // );\r\n  //   );\r\n  // };\r\n  // get current vehicule\r\n  // const indexOfLastVehicule = currentPage * vehiculePerPage;\r\n  // const indexOfFirstVehicule = indexOfLastVehicule - vehiculePerPage;\r\n  // const currentVehicule = vehicule.slice(\r\n  //   currentPage * vehiculePerPage - vehiculePerPage,\r\n  //   currentPage * vehiculePerPage\r\n  // );\r\n\r\n  //get page form pagination\r\n  const paginate = (pageNumber) => {\r\n    console.log(pageNumber);\r\n    setCurrentPage(pageNumber);\r\n  };\r\n  const openModalDeclarePanne = (data) => {\r\n    setShowModalDeclarePanne(true);\r\n    setidEquipement(data.id);\r\n    setMessagePanne('');\r\n    setTypeEquipement(data.typeEquipement);\r\n  };\r\n  const openModalCloturePanne = (data) => {\r\n    setShowModalCloturePanne(true);\r\n    setidEquipement(data.id);\r\n    setMessageMarche()\r\n    setTypeEquipement(data.typeEquipement);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   getComiteById(idComite);\r\n  // }, []);\r\n\r\n  // const getComiteById = (id) => {\r\n  //   comiteService\r\n  //     .getComiteById(id)\r\n  //     .then((res) => {\r\n  //       console.log(res);\r\n  //     })\r\n  //     .catch((e) => console.log(e));\r\n  // };\r\n  let idComite = JSON.parse(match.params.comiteParam).idComite;\r\n  let nomComite = JSON.parse(match.params.comiteParam).nomComite;\r\n  let history = useHistory();\r\n  let color = \"green\";\r\n  let i = 1,j = 1,k = 1;\r\n\r\n  return (\r\n    \r\n      <div className=\"bg-gray-800 flex flex-col text-black font-quicksand h-full w-full\">\r\n        <h2 className=\"mx-auto text-xl uppercase pt-3  text-white\">\r\n          {nomComite}\r\n        </h2>\r\n        <div className=\" sm:w-10/12 sm:mx-auto\">\r\n          \r\n            <ul\r\n              className=\"flex mb-0 list-none flex-wrap pt-3  flex-row\"\r\n              role=\"tablist\"\r\n            >\r\n              <li className=\"flex-auto text-center\">\r\n                <a\r\n                  className={\r\n                    \"text-lg font-bold uppercase px-5 py-3 shadow-lg block leading-normal\"+\r\n                    (openTab === 1\r\n                      ? \" text-white bg-\" + color + \"-600\"\r\n                      : \" text-\" + color + \"-600 bg-white\")\r\n                  }\r\n\r\n                  \r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setOpenTab(1);\r\n                  }}\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link1\"\r\n                  role=\"tablist\"\r\n                >\r\n                  Equipements\r\n                </a>\r\n              </li>\r\n              <li className=\" flex-auto text-center\">\r\n                <a\r\n                  className={\r\n                    \"text-lg font-bold uppercase px-5 py-3 shadow-lg  block leading-normal \" +\r\n                    (openTab === 2\r\n                      ? \"text-white bg-\" + color + \"-600\"\r\n                      : \"text-\" + color + \"-600 bg-white\")\r\n                  }\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setOpenTab(2);\r\n                  }}\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link2\"\r\n                  role=\"tablist\"\r\n                >\r\n                  Pannes\r\n                </a>\r\n              </li>\r\n              <li className=\"flex-auto text-center\">\r\n                <a\r\n                  className={\r\n                    \"text-lg font-bold uppercase px-5 py-3 shadow-lg block leading-normal \" +\r\n                    (openTab === 3\r\n                      ? \"text-white bg-\" + color + \"-600\"\r\n                      : \"text-\" + color + \"-600 bg-white\")\r\n                  }\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setOpenTab(3);\r\n                  }}\r\n                  data-toggle=\"tab\"\r\n                  href=\"#link3\"\r\n                  role=\"tablist\"\r\n                >\r\n                  Reparations\r\n                </a>\r\n              </li>\r\n            </ul>\r\n            \r\n                <div className={\" h-screen px-3 \"+ (openTab===1 || openTab===2||openTab===3 ?\" bg-gray-100  border border-green-600\": \" \")}>\r\n                  <div\r\n                    className={\r\n                      openTab === 1 ? \"flex flex-col items-center \" : \"hidden\"\r\n                    }\r\n                    id=\"link1\"\r\n                  >\r\n                    <div className=\"relative my-2 mx-auto py-3 px-4 rounded-lg sm:w-3/12 shadow bg-white \">\r\n                      <svg\r\n                        className=\"w-5 h-5 absolute text-gray-500 left-4 top-3\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth=\"2\"\r\n                          d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                        />\r\n                      </svg>\r\n                      <input\r\n                        className=\"pl-6 focus:outline-none w-full bg-transparent text-gray-900\"\r\n                        value={findKey}\r\n                        placeholder=\"Rechercher ...\"\r\n                        onChange={(event) => setFindKey(event.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\" sm:w-full  \">\r\n                      <h2 className=\"text-center text-lg\">\r\n                        {\" \"}\r\n                        Liste des Equipements\r\n                      </h2>\r\n                      <div className=\" flex flex-col items-center sm:flex-row sm:space-x-4 text-white\">\r\n                        <button\r\n                          className=\"bg-green-600 p-2 rounded-lg mb-2\"\r\n                          onClick={() => {\r\n                            history.push(`/add-equipment/${idComite}`);\r\n                          }}\r\n                        >\r\n                          Ajouter Equipement\r\n                        </button>\r\n                      </div>\r\n                      <table className=\" table-auto  w-full border-collapse\">\r\n                        <thead>\r\n                          <tr className=\"uppercase  bg-gray-300\">\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-800\">\r\n                              N°\r\n                            </th>\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-800\">\r\n                              Date Réception\r\n                            </th>\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-800\">\r\n                              Type d'équipement\r\n                            </th>\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-light\">\r\n                              Statut\r\n                            </th>\r\n                            <th className=\"py-4 px-2  border-grey-light\">\r\n                              Action\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"bg-white\">\r\n                          {search(equipements)\r\n                            .slice(\r\n                              currentPage * nombrePerPage - nombrePerPage,\r\n                              currentPage * nombrePerPage\r\n                            )\r\n                            .map((row) => (\r\n                              <tr\r\n                                className=\"text-center  hover:bg-gray-100 \"\r\n                                key={row.id}\r\n                              >\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {i++}\r\n                                </td>\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {row.dateReception}\r\n                                </td>\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {row.typeEquipement}\r\n                                </td>\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {\r\n                                    row.statutEquipement\r\n                                    // <a\r\n                                    //   download={row.name}\r\n                                    //   href={`data:application/pdf;base64,${row.photoPresidente}`}\r\n                                    // >\r\n                                    //   <img\r\n                                    //     class=\" object-fill w-20 h-10\"\r\n                                    //     src={`data:application/pdf;base64,${row.photoPresidente}`}\r\n                                    //     alt=\"doc\"\r\n                                    //   />\r\n                                    // </a>\r\n                                  }\r\n                                </td>\r\n                                <td className=\" flex justify-center items-center space-x-5 py-4 px-2 border-b border-grey-light\">\r\n                                  <svg\r\n                                    onClick={() => {\r\n                                      console.log(row.id);\r\n                                      //   history.push(`/comite-show/${row.id}`);\r\n                                    }}\r\n                                    className=\"w-5 h-5 cursor-pointer\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    fill=\"none\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    stroke=\"currentColor\"\r\n                                  >\r\n                                    <path\r\n                                      stroke-linecap=\"round\"\r\n                                      stroke-linejoin=\"round\"\r\n                                      stroke-width=\"2\"\r\n                                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                                    />\r\n                                    <path\r\n                                      stroke-linecap=\"round\"\r\n                                      stroke-linejoin=\"round\"\r\n                                      stroke-width=\"2\"\r\n                                      d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n                                    />\r\n                                  </svg>\r\n                                  {row.statutEquipement === \"EN MARCHE\" ? (\r\n                                    <button\r\n                                      className=\"text-red-600 p-2 bg-orange-100 rounded-lg mb-2\"\r\n                                      onClick={() => {\r\n                                        openModalDeclarePanne(row);\r\n                                        setShowModalDeclarePanne(true);\r\n                                      }}\r\n                                    >\r\n                                      Déclarer Panne\r\n                                    </button>\r\n                                  ) : (\r\n                                    <button\r\n                                      className=\"text-red-600  bg-green-100 p-2 rounded-lg mb-2\"\r\n                                      onClick={() => {\r\n                                        openModalCloturePanne(row);\r\n                                        setShowModalCloturePanne(true);\r\n                                      }}\r\n                                    >\r\n                                      Clôturer Panne\r\n                                    </button>\r\n                                  )}\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    <Pagination\r\n                      nombreTotal={search(equipements).length}\r\n                      nombrePerPage={nombrePerPage}\r\n                      paginate={paginate}\r\n                    />\r\n                    {showModalDeclarePanne ? (\r\n                      <>\r\n                        <div\r\n                          className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n                          // onClick={() => setShowModal(false)}\r\n                        >\r\n                          <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n                            <form\r\n                              onSubmit={handleSubmit(onSubmit1)}\r\n                              className=\"\"\r\n                            >\r\n                              {/*content*/}\r\n                              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                                {/*header*/}\r\n                                <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\r\n                                  <h3 className=\"text-3xl font-semibold\">\r\n                                    Déclaration Panne\r\n                                  </h3>\r\n                                  <button\r\n                                    className=\"p-1 ml-auto bg-transparent border-0 text-black float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                                    onClick={() =>\r\n                                      setShowModalDeclarePanne(false)\r\n                                    }\r\n                                  >\r\n                                    {/* <span className=\"bg-transparent text-red-600  h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                                                  ×\r\n                                                </span> */}\r\n                                  </button>\r\n                                </div>\r\n                                {/*body*/}\r\n                                <div className=\"relative  flex-auto\">\r\n                                  <div className=\"text-gray-600 text-lg leading-relaxed p-10\">\r\n                                    <div className=\"flex flex-col space-y-2 items-start p-10\">\r\n                                      <div>\r\n                                        <label>Date de Déclaration</label>\r\n\r\n                                        <input\r\n                                          className=\" text-gray-900 py-2 rounded px-4 w-full focus:outline-none focus:border-green-400  border-2\"\r\n                                          ref={register}\r\n                                          type=\"date\"\r\n                                          name=\"dateDeclaration\"\r\n                                        />\r\n                                        {errors.dateDeclaration && (\r\n                                          <span class=\"text-sm font-bold text-red-600 \">\r\n                                            Date invalide\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                      <div>\r\n                                        <label> Type de Panne: </label>\r\n                                        <select\r\n                                          className=\"text-gray-900 py-2 rounded px-4  w-full  focus:outline-none focus:border-green-400 border-2\"\r\n                                          ref={register}\r\n                                          type=\"text\"\r\n                                          name=\"typePanne\"\r\n                                        >\r\n                                          <option value=\"STMP\">STMP</option>\r\n                                          <option value=\"POP\">POP</option>\r\n                                        </select>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                {/*footer*/}\r\n                                <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\r\n                                  <button\r\n                                    className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\r\n                                    type=\"button\"\r\n                                    style={{\r\n                                      transition: \"all .15s ease\",\r\n                                    }}\r\n                                    onClick={() =>\r\n                                      setShowModalDeclarePanne(false)\r\n                                    }\r\n                                  >\r\n                                    Fermer\r\n                                  </button>\r\n                                  <button\r\n                                    className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\r\n                                    type=\"submit\"\r\n                                    style={{\r\n                                      transition: \"all .15s ease\",\r\n                                    }}\r\n                                    // onClick={() => setShowModal(false)}\r\n                                  >\r\n                                    Valider\r\n                                  </button>\r\n                                </div>\r\n                                <p className=\"text-center font-semibold text-orange-300\">\r\n                                  {messagePanne}\r\n                                </p>\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n                      </>\r\n                    ) : null}\r\n                    {showModalCloturePanne ? (\r\n                      <>\r\n                        <div\r\n                          className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n                          // onClick={() => setShowModal(false)}\r\n                        >\r\n                          <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n                            <form\r\n                              onSubmit={handleSubmit(onSubmit2)}\r\n                              className=\"\"\r\n                            >\r\n                              {/*content*/}\r\n                              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                                {/*header*/}\r\n                                <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-300 rounded-t\">\r\n                                  <h3 className=\"text-3xl font-semibold\">\r\n                                    Clôture Panne\r\n                                  </h3>\r\n                                  <button\r\n                                    className=\"p-1 ml-auto bg-transparent border-0 text-black float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                                    onClick={() =>\r\n                                      setShowModalCloturePanne(false)\r\n                                    }\r\n                                  >\r\n                                    {/* <span className=\"bg-transparent text-red-600  h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                                                  ×\r\n                                                </span> */}\r\n                                  </button>\r\n                                </div>\r\n                                {/*body*/}\r\n                                <div className=\"relative  flex-auto\">\r\n                                  <div className=\"text-gray-600 text-lg leading-relaxed p-10\">\r\n                                    <div className=\"flex flex-col space-y-2 items-start p-10\">\r\n                                      <div>\r\n                                        <label>Date de Clôture</label>\r\n\r\n                                        <input\r\n                                          className=\" text-gray-900 py-2 rounded px-4 w-full focus:outline-none focus:border-green-400  border-2\"\r\n                                          ref={register}\r\n                                          type=\"date\"\r\n                                          name=\"dateCloture\"\r\n                                        />\r\n                                        {errors.dateCloture && (\r\n                                          <span class=\"text-sm font-bold text-red-600 \">\r\n                                            Date invalide\r\n                                          </span>\r\n                                        )}\r\n                                      </div>\r\n                                      <div>\r\n                                        <label> Type de Panne: </label>\r\n                                        <select\r\n                                          className=\"text-gray-900 py-2 rounded px-4  w-full  focus:outline-none focus:border-green-400 border-2\"\r\n                                          ref={register}\r\n                                          type=\"text\"\r\n                                          name=\"typePanne\"\r\n                                        >\r\n                                          <option value=\"STMP\">STMP</option>\r\n                                          <option value=\"POP\">POP</option>\r\n                                        </select>\r\n                                      </div>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                                {/*footer*/}\r\n                                <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-300 rounded-b\">\r\n                                  <button\r\n                                    className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1\"\r\n                                    type=\"button\"\r\n                                    style={{\r\n                                      transition: \"all .15s ease\",\r\n                                    }}\r\n                                    onClick={() =>\r\n                                      setShowModalCloturePanne(false)\r\n                                    }\r\n                                  >\r\n                                    Fermer\r\n                                  </button>\r\n                                  <button\r\n                                    className=\"bg-green-500 text-white active:bg-green-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1\"\r\n                                    type=\"submit\"\r\n                                    style={{\r\n                                      transition: \"all .15s ease\",\r\n                                    }}\r\n                                    // onClick={() => setShowModal(false)}\r\n                                  >\r\n                                    Valider\r\n                                  </button>\r\n                                </div>\r\n                                <p className=\"text-center font-semibold text-orange-300\">\r\n                                  {messageMarche}\r\n                                </p>\r\n                              </div>\r\n                            </form>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n                      </>\r\n                    ) : null}\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      openTab === 2 ? \"flex flex-col items-center\" : \"hidden\"\r\n                    }\r\n                    id=\"link2\"\r\n                  >\r\n                    <div className=\"relative my-2 mx-auto py-3 px-4 rounded-lg sm:w-3/12 shadow bg-white \">\r\n                      <svg\r\n                        className=\"w-5 h-5 absolute text-gray-500 left-4 top-3\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth=\"2\"\r\n                          d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                        />\r\n                      </svg>\r\n                      <input\r\n                        className=\"pl-6 focus:outline-none w-full bg-transparent text-gray-900\"\r\n                        value={findKey}\r\n                        placeholder=\"Rechercher ...\"\r\n                        onChange={(event) => setFindKey(event.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\" sm:w-full py-4\">\r\n                      <h2 className=\"text-center  text-lg\">\r\n                        {\" \"}\r\n                        Les Pannes\r\n                      </h2>\r\n                      <div className=\" flex items-center  text-white\">\r\n                        {/* <button\r\n                          className=\"bg-green-600 p-2 rounded-lg mb-2\"\r\n                          onClick={() => {\r\n                            history.push(`/add-equipment/${idComite}`);\r\n                          }}\r\n                        >\r\n                          Ajouter Equipement\r\n                        </button> */}\r\n                      </div>\r\n                      <table className=\"table-auto w-full border-collapse\">\r\n                        <thead >\r\n                          <tr className=\"uppercase bg-gray-300\">\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-800\">\r\n                              N°\r\n                            </th>\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-800\">\r\n                              Date Déclaration\r\n                            </th>\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-800\">\r\n                              Type d'équipement\r\n                            </th>\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-light\">\r\n                              Statut\r\n                            </th>\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-light\">\r\n                              Type de Panne\r\n                            </th>\r\n\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-light\">\r\n                              Action\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"bg-white\">\r\n                          {search(pannes)\r\n                            .slice(\r\n                              currentPage * nombrePerPage - nombrePerPage,\r\n                              currentPage * nombrePerPage\r\n                            )\r\n                            .map((row) => (\r\n                              <tr\r\n                                className=\"text-center  hover:bg-gray-100 \"\r\n                                key={row.id}\r\n                              >\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {j++}\r\n                                </td>\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {row.dateDeclaration}\r\n                                </td>\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {row.typeEquipement}\r\n                                </td>\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {\r\n                                    row.statutEquipement\r\n                                    // <a\r\n                                    //   download={row.name}\r\n                                    //   href={`data:application/pdf;base64,${row.photoPresidente}`}\r\n                                    // >\r\n                                    //   <img\r\n                                    //     class=\" object-fill w-20 h-10\"\r\n                                    //     src={`data:application/pdf;base64,${row.photoPresidente}`}\r\n                                    //     alt=\"doc\"\r\n                                    //   />\r\n                                    // </a>\r\n                                  }\r\n                                </td>\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {row.typePanne}\r\n                                </td>\r\n                                <td className=\" flex justify-center items-center space-x-5  py-4 px-2 border-b border-grey-light\">\r\n                                  <svg\r\n                                    onClick={() => {\r\n                                      console.log(row.id);\r\n                                      //   history.push(`/comite-show/${row.id}`);\r\n                                    }}\r\n                                    className=\"w-5 h-6 cursor-pointer\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    fill=\"none\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    stroke=\"currentColor\"\r\n                                  >\r\n                                    <path\r\n                                      stroke-linecap=\"round\"\r\n                                      stroke-linejoin=\"round\"\r\n                                      stroke-width=\"2\"\r\n                                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                                    />\r\n                                    <path\r\n                                      stroke-linecap=\"round\"\r\n                                      stroke-linejoin=\"round\"\r\n                                      stroke-width=\"2\"\r\n                                      d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n                                    />\r\n                                  </svg>\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    <Pagination\r\n                      nombreTotal={search(pannes).length}\r\n                      nombrePerPage={nombrePerPage}\r\n                      paginate={paginate}\r\n                    />\r\n                  </div>\r\n\r\n                  <div\r\n                    className={\r\n                      openTab === 3 ? \"flex flex-col items-center\" : \"hidden\"\r\n                    }\r\n                    id=\"link3\"\r\n                  >\r\n                    <div className=\"relative my-2 mx-auto py-3 px-4 rounded-lg sm:w-3/12 shadow bg-white \">\r\n                      <svg\r\n                        className=\"w-5 h-5 absolute text-gray-500 left-4 top-3\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        fill=\"none\"\r\n                        viewBox=\"0 0 24 24\"\r\n                        stroke=\"currentColor\"\r\n                      >\r\n                        <path\r\n                          strokeLinecap=\"round\"\r\n                          strokeLinejoin=\"round\"\r\n                          strokeWidth=\"2\"\r\n                          d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                        />\r\n                      </svg>\r\n                      <input\r\n                        className=\"pl-6 focus:outline-none w-full bg-transparent text-gray-900\"\r\n                        value={findKey}\r\n                        placeholder=\"Rechercher ...\"\r\n                        onChange={(event) => setFindKey(event.target.value)}\r\n                      />\r\n                    </div>\r\n                    <div className=\"sm:w-full py-4\">\r\n                      <h2 className=\"text-center  text-lg\">\r\n                        {\" \"}\r\n                        Les Réparations\r\n                      </h2>\r\n                      <div className=\" flex items-center space-x-4 text-white\">\r\n                        {/* <button\r\n                          className=\"bg-green-600 p-2 rounded-lg mb-2\"\r\n                          onClick={() => {\r\n                            history.push(`/add-equipment/${idComite}`);\r\n                          }}\r\n                        >\r\n                          Ajouter Equipement\r\n                        </button> */}\r\n                      </div>\r\n                      <table className=\"table-auto w-full border-collapse\">\r\n                        <thead>\r\n                          <tr className=\"uppercase bg-gray-300\">\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-800\">\r\n                              N°\r\n                            </th>\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-800\">\r\n                              Date de Clôture\r\n                            </th>\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-800\">\r\n                              Type d'équipement\r\n                            </th>\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-light\">\r\n                              Statut\r\n                            </th>\r\n                            <th className=\"py-4 px-2 border-r-2 border-grey-light\">\r\n                              Type de Panne\r\n                            </th>\r\n\r\n                            <th className=\"py-4 px-2  border-grey-light\">\r\n                              Action\r\n                            </th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody className=\"bg-white\">\r\n                          {search(reparations)\r\n                            .slice(\r\n                              currentPage * nombrePerPage - nombrePerPage,\r\n                              currentPage * nombrePerPage\r\n                            )\r\n                            .map((row) => (\r\n                              <tr\r\n                                className=\"text-center  hover:bg-gray-100 \"\r\n                                key={row.id}\r\n                              >\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {k++}\r\n                                </td>\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {row.dateCloture}\r\n                                </td>\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {row.typeEquipement}\r\n                                </td>\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {\r\n                                    row.statutEquipement\r\n                                    // <a\r\n                                    //   download={row.name}\r\n                                    //   href={`data:application/pdf;base64,${row.photoPresidente}`}\r\n                                    // >\r\n                                    //   <img\r\n                                    //     class=\" object-fill w-20 h-10\"\r\n                                    //     src={`data:application/pdf;base64,${row.photoPresidente}`}\r\n                                    //     alt=\"doc\"\r\n                                    //   />\r\n                                    // </a>\r\n                                  }\r\n                                </td>\r\n                                <td className=\"py-4 px-2 border-b border-grey-light\">\r\n                                  {row.typePanne}\r\n                                </td>\r\n                                <td className=\" flex justify-center items-center space-x-5 py-4 px-2 border-b border-grey-light\">\r\n                                  <svg\r\n                                    onClick={() => {\r\n                                      console.log(row.id);\r\n                                      //   history.push(`/comite-show/${row.id}`);\r\n                                    }}\r\n                                    className=\"w-5 h-5 cursor-pointer\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    fill=\"none\"\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    stroke=\"currentColor\"\r\n                                  >\r\n                                    <path\r\n                                      stroke-linecap=\"round\"\r\n                                      stroke-linejoin=\"round\"\r\n                                      stroke-width=\"2\"\r\n                                      d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"\r\n                                    />\r\n                                    <path\r\n                                      stroke-linecap=\"round\"\r\n                                      stroke-linejoin=\"round\"\r\n                                      stroke-width=\"2\"\r\n                                      d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"\r\n                                    />\r\n                                  </svg>\r\n                                  {/* {row.statutEquipement === \"EN MARCHE\" ? (\r\n                                    <button\r\n                                      className=\"text-red-600 p-2 bg-orange-100 rounded-lg mb-2\"\r\n                                      onClick={() => {\r\n                                        openModalDeclarePanne(row.id);\r\n                                        setShowModalDeclarePanne(true);\r\n                                      }}\r\n                                    >\r\n                                      Déclarer Panne\r\n                                    </button>\r\n                                  ) : (\r\n                                    <button\r\n                                      className=\"text-red-600  bg-green-100 p-2 rounded-lg mb-2\"\r\n                                      onClick={() => {\r\n                                        openModalCloturePanne(row.id);\r\n                                        setShowModalCloturePanne(true);\r\n                                      }}\r\n                                    >\r\n                                      Clôturer Panne\r\n                                    </button>\r\n                                  )} */}\r\n                                </td>\r\n                              </tr>\r\n                            ))}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    <Pagination\r\n                      nombreTotal={search(reparations).length}\r\n                      nombrePerPage={nombrePerPage}\r\n                      paginate={paginate}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        \r\n    \r\n  );\r\n}\r\n\r\nexport default Equipements;\r\n","C:\\Users\\dell\\Documents\\frontpudc\\src\\components\\Equipement\\AddEquipement.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\service\\equipementService.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\service\\panneService.js",[],"C:\\Users\\dell\\Documents\\frontpudc\\src\\service\\reparation.js",[],{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"138","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":24,"column":10,"nodeType":"144","messageId":"145","endLine":24,"endColumn":21},{"ruleId":"142","severity":1,"message":"146","line":24,"column":23,"nodeType":"144","messageId":"145","endLine":24,"endColumn":37},{"ruleId":"142","severity":1,"message":"147","line":11,"column":10,"nodeType":"144","messageId":"145","endLine":11,"endColumn":17},{"ruleId":"142","severity":1,"message":"148","line":12,"column":25,"nodeType":"144","messageId":"145","endLine":12,"endColumn":41},{"ruleId":"142","severity":1,"message":"149","line":63,"column":9,"nodeType":"144","messageId":"145","endLine":63,"endColumn":17},{"ruleId":"142","severity":1,"message":"150","line":3,"column":10,"nodeType":"144","messageId":"145","endLine":3,"endColumn":14},{"ruleId":"142","severity":1,"message":"151","line":8,"column":10,"nodeType":"144","messageId":"145","endLine":8,"endColumn":17},{"ruleId":"142","severity":1,"message":"152","line":8,"column":19,"nodeType":"144","messageId":"145","endLine":8,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":13,"column":6,"nodeType":"155","endLine":13,"endColumn":8,"suggestions":"156"},{"ruleId":"142","severity":1,"message":"157","line":27,"column":7,"nodeType":"144","messageId":"145","endLine":27,"endColumn":12},{"ruleId":"142","severity":1,"message":"158","line":45,"column":10,"nodeType":"144","messageId":"145","endLine":45,"endColumn":32},{"ruleId":"142","severity":1,"message":"159","line":4,"column":18,"nodeType":"144","messageId":"145","endLine":4,"endColumn":28},{"ruleId":"142","severity":1,"message":"160","line":7,"column":8,"nodeType":"144","messageId":"145","endLine":7,"endColumn":17},{"ruleId":"142","severity":1,"message":"161","line":46,"column":10,"nodeType":"144","messageId":"145","endLine":46,"endColumn":19},{"ruleId":"142","severity":1,"message":"162","line":46,"column":21,"nodeType":"144","messageId":"145","endLine":46,"endColumn":33},{"ruleId":"142","severity":1,"message":"147","line":32,"column":10,"nodeType":"144","messageId":"145","endLine":32,"endColumn":17},{"ruleId":"142","severity":1,"message":"148","line":33,"column":25,"nodeType":"144","messageId":"145","endLine":33,"endColumn":41},{"ruleId":"142","severity":1,"message":"163","line":35,"column":10,"nodeType":"144","messageId":"145","endLine":35,"endColumn":17},{"ruleId":"142","severity":1,"message":"164","line":39,"column":10,"nodeType":"144","messageId":"145","endLine":39,"endColumn":16},{"ruleId":"142","severity":1,"message":"165","line":39,"column":18,"nodeType":"144","messageId":"145","endLine":39,"endColumn":27},{"ruleId":"153","severity":1,"message":"166","line":45,"column":6,"nodeType":"155","endLine":45,"endColumn":8,"suggestions":"167"},{"ruleId":"142","severity":1,"message":"168","line":47,"column":35,"nodeType":"144","messageId":"145","endLine":47,"endColumn":40},"no-native-reassign",["169"],"no-negated-in-lhs",["170"],["169"],["170"],"no-unused-vars","'isRecepisse' is assigned a value but never used.","Identifier","unusedVar","'setIsRecepisse' is assigned a value but never used.","'loading' is assigned a value but never used.","'setNombrePerPage' is assigned a value but never used.","'imprimer' is assigned a value but never used.","'Link' is defined but never used.","'openTab' is assigned a value but never used.","'setOpenTab' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'idComite'. Either include it or remove the dependency array.","ArrayExpression",["171"],"'color' is assigned a value but never used.","'handleRegisterResponse' is defined but never used.","'ScrollLink' is defined but never used.","'FormLogin' is defined but never used.","'openLogin' is assigned a value but never used.","'setOpenLogin' is assigned a value but never used.","'logging' is assigned a value but never used.","'statut' is assigned a value but never used.","'setStatut' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getEquipmentByIdComite', 'getPanneByIdComite', and 'getReparationByIdComite'. Either include them or remove the dependency array.",["172"],"'watch' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [idComite]",{"range":"177","text":"178"},"Update the dependencies array to be: [getEquipmentByIdComite, getPanneByIdComite, getReparationByIdComite]",{"range":"179","text":"180"},[453,455],"[idComite]",[1739,1741],"[getEquipmentByIdComite, getPanneByIdComite, getReparationByIdComite]"]